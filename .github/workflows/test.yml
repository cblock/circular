name: Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: circular_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup elixir
        uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 23.0.2
          elixir-version: 1.10.4
      
      - name: Get deps cache
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: ${{ runner.os }}-mix-
      
      - name: Get build cache
        uses: actions/cache@v1
        with:
          path: _build/test/
          key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: ${{ runner.os }}-build-      
      
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      
      - name: Install chrome driver
        uses: nanasess/setup-chromedriver@master
      - run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

      - name: Install and compile dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix compile
          npm install --prefix assets
          npm run deploy --prefix assets
          mix ecto.migrate

      - name: Check formatting
        run: mix format --check-formatted

      - name: Run sobelow
        run: mix sobelow --ignore Config.HTTPS,Config.CSP --exit --details

      - name: Run Credo
        run: mix credo

      - name: Get PLT Cache
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
      
      - name: Run dialyzer
        run: mix dialyzer --no-check --halt-exit-status

      - name: Run Tests
        run: mix test --trace

      - name: Run Code Coverage
        run: mix coveralls.github
